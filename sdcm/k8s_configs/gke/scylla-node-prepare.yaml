# ClusterRole for cpu-policy-daemonset.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pv-setup
rules:
  - apiGroups:
      - scylla.scylladb.com
    resources:
      - scyllaclusters
    verbs:
      - get
      - list
      - watch
---
# ServiceAccount for cpu-policy daemonset.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pv-setup
  namespace: default
---
# Bind cpu-policy daemonset ServiceAccount with ClusterRole.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pv-setup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pv-setup
subjects:
- kind: ServiceAccount
  name: pv-setup
  namespace: default
---
# Daemonset that converts ephemeral-storage to xfs
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: xfs-formatter
spec:
  selector:
    matchLabels:
      app: xfs-formatter
  template:
    metadata:
      labels:
        app: xfs-formatter
    spec:
      hostPID: true
      serviceAccountName: pv-setup
      tolerations:
      - key: role
        operator: Equal
        value: scylla-clusters
        effect: NoSchedule
      containers:
      - name: xfs-formatter
        # NOTE: sha256:8948 .. fb5c33 was built on Dec 29 2021
        #       which includes following operator PR with required changes:
        #           https://github.com/scylladb/scylla-operator/pull/770
        image: docker.io/scylladb/scylla-operator@sha256:894836496e1ea8f7ea9dd4e1aa55cbd6e3aa382cfdeebc474dad96a29dfb5c33
        securityContext:
          privileged: true
        command:
        - "/bin/bash"
        - "-euExo"
        - "pipefail"
        - "-O"
        - "inherit_errexit"
        - "-c"
        - |
          cp -r /usr/local/lib/scylla-operator/gke/xfs-formatter /host/var/lib/

          if [[ ! -d /host/usr/local/lib/systemd ]]; then
            mkdir /host/usr/local/lib/systemd
          fi

          if [[ ! -d /host/usr/local/lib/systemd/system ]]; then
            mkdir /host/usr/local/lib/systemd/system
          fi

          cp -r /usr/local/lib/scylla-operator/gke/systemd/. /host/usr/local/lib/systemd/system

          if [[ ! -d /host/usr/local/lib/systemd/system/kube-node-configuration.service.d ]]; then
            mkdir /host/usr/local/lib/systemd/system/kube-node-configuration.service.d
          fi

          cat<<-EOF > /host/usr/local/lib/systemd/system/kube-node-configuration.service.d/10-path.conf
            [Service]
            Environment="PATH=/var/lib/xfs-formatter/bin:$( chroot /host /bin/bash -c 'echo "${PATH}"' )"
          EOF

          if [[ ! -d /host/mnt/raid-disks ]]; then
            mkdir /host/mnt/raid-disks
          fi

          if [[ ! -d /host/mnt/raid-disks/disk0 ]]; then
            mkdir /host/mnt/raid-disks/disk0
          fi
          chmod a+w /host/mnt/raid-disks/disk0

          chroot /host /bin/bash -euxo pipefail -O inherit_errexit -c '
              systemctl daemon-reload
              systemctl enable --now mnt-raid\\x2ddisks-disk0.mount
              systemctl start xfs-formatter.service
              journalctl -xeu xfs-formatter -f
              '
        volumeMounts:
        - name: hostfs
          mountPath: /host
          mountPropagation: Bidirectional
        readinessProbe:
          exec:
            command:
              - "chroot"
              - "/host"
              - "/bin/bash"
              - "-euExo"
              - "pipefail"
              - "-O"
              - "inherit_errexit"
              - "-c"
              - |
                xfs_info "$( { grep -E '/mnt/raid-disks/disk0($| )' /proc/mounts || test $? = 1; } | sed -E -e 's/([^ ]+) .+/\1/' )"
          initialDelaySeconds: 10
          periodSeconds: 10
      - name: pv-setup
        image: bitnami/kubectl:1.21.4
        imagePullPolicy: Always
        env:
          - name: HOSTFS
            value: /mnt/hostfs
          - name: KUBELET_CONFIG_PATH
            value: /home/kubernetes/kubelet-config.yaml
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
          - name: hostfs
            mountPath: /mnt/hostfs
            mountPropagation: Bidirectional
        command:
          - "/bin/bash"
          - "-c"
          - "--"
        args:
          - |
            set -ex
            if [ ! -f "$HOSTFS$KUBELET_CONFIG_PATH" ]; then
                echo "Kublet config not found"
                exit 1
            fi

            TOKEN_PATH=$(find /run/secrets/kubernetes.io -name token | grep token -m1)
            TOKEN=$(cat $TOKEN_PATH)
            CA_CRT=$TOKEN_PATH/../ca.crt
            kubectl config set-cluster scylla --server=https://kubernetes.default --certificate-authority=$CA_CRT
            kubectl config set-credentials qa@scylladb.com --token=$TOKEN
            kubectl config set-context scylla --cluster=scylla --user=qa@scylladb.com
            kubectl config use-context scylla

            # Create directories for each Scylla cluster on each K8S node which will host PVs
            while true; do
              if [[ -z $(mount | grep  "/dev/md127") ]]; then
                sleep 5;
                continue
              fi
              for i in $(seq -f "pv-%02g" $( kubectl get scyllaclusters -A --field-selector metadata.name!=scylla-manager --no-headers | grep -c " " ) ); do
                if [[ ! -d "/mnt/hostfs/mnt/raid-disks/disk0/${i}" ]]; then
                  mkdir "/mnt/hostfs/mnt/raid-disks/disk0/${i}"
                fi
                ( mount | grep "/mnt/hostfs/mnt/raid-disks/disk0/${i} " 2>/dev/null 1>&2 ) || \
                mount --bind "/mnt/hostfs/mnt/raid-disks/disk0/${i}"{,}
              done
              sleep 30
            done
      volumes:
      - name: hostfs
        hostPath:
          path: /
