defaultRules:
  enabled: false

# Install node exported as a DaemonSet.
nodeExporter:
  enabled: false

grafana:
  defaultDashboardsEnabled: false
  adminPassword: admin

  sidecar:
    dashboards:
      enabled: true
      # ConfigMaps with label below will be added to Grafana as dashboards.
      label: grafana_dashboard
    datasources:
      # Disable default datasource, instead create our own below
      defaultDatasourceEnabled: false

  additionalDataSources:
  # Scylla Monitoring use hardcoded name for datasource.
  # Default one is called "Prometheus" where SM requires "prometheus".
  - name: prometheus
    type: prometheus
    url: http://prometheus-operated:9090

  plugins:
    - grafana-piechart-panel
    - camptocamp-prometheus-alertmanager-datasource
    # Disabled because it's not available in grafana repo
    # - scylla-plugin

  # This might need to be increased for bigger deployments.
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Configure NodePort service to make grafana be available outside of a K8S cluster
  service:
    type: NodePort
    nodePort: 30000
    port: 30000

  # Configure anonymous access
  grafana.ini:
    users:
      viewers_can_edit: true
    auth:
      disable_login_form: true
      disable_signout_menu: true
    auth.anonymous:
      enabled: true
      org_role: Editor

  affinity: {}

alertmanager:
  alertmanagerSpec:
    affinity: {}

prometheusOperator:
  kubeletService:
    enabled: false

  # This might need to be increased for bigger deployments.
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

  affinity: {}

prometheus:
  # This might need to be increased for bigger deployments.
  resources:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 1
      memory: 2Gi

  # Configure NodePort service to make prometheus be available outside of a K8S cluster
  service:
    type: NodePort
    nodePort: 30090

  prometheusSpec:
    # Set scrapeInterval and scrapeTimeout the same as in SCT (standalone) monitoring
    scrapeInterval: 20s
    scrapeTimeout: 15s

    affinity: {}

    # Instruct prometheus operator to search for any ServiceMonitor
    serviceMonitorSelector: { }
    # This prevents from adding any Helm label to serviceMonitorSelector if
    # above is empty.
    serviceMonitorSelectorNilUsesHelmValues: false

    # Relabelings needed for Scylla dashboards
    additionalScrapeConfigs:
      - job_name: scylla
        relabel_configs:
        - source_labels: [ __address__ ]
          regex: '([^:]+)'
          target_label: __address__
          replacement: '${1}:9180'
        - source_labels: [ __address__ ]
          regex: '(.*):.+'
          target_label: instance
          replacement: '${1}'
        metric_relabel_configs:
          - source_labels: [ version ]
            regex: '(.+)'
            target_label: CPU
            replacement: 'cpu'
          - source_labels: [ version ]
            regex: '(.+)'
            target_label: CQL
            replacement: 'cql'
          - source_labels: [ version ]
            regex: '(.+)'
            target_label: OS
            replacement: 'os'
          - source_labels: [ version ]
            regex: '(.+)'
            target_label: IO
            replacement: 'io'
          - source_labels: [ version ]
            regex: '(.+)'
            target_label: Errors
            replacement: 'errors'
          - regex: 'help|exported_instance|type'
            action: labeldrop
          - source_labels: [ version ]
            regex: '([0-9]+\.[0-9]+)(\.?[0-9]*).*'
            replacement: '$1$2'
            target_label: svr

# Disable monitoring for k8s internals
kubeApiServer:
  enabled: false
kubelet:
  enabled: false
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeStateMetrics:
  enabled: false
