apiVersion: v1
kind: ServiceAccount
metadata:
  name: "static-local-volume-provisioner-sa"
  namespace: "default"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "static-local-volume-provisioner-node-clusterrole"
  namespace: "default"
rules:
- apiGroups:
    - ""
  resources:
    - nodes
  verbs:
    - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: static-local-volume-provisioner-pv-clusterrole-binding
  namespace: "default"
subjects:
- kind: ServiceAccount
  name: "static-local-volume-provisioner-sa"
  namespace: "default"
roleRef:
  kind: ClusterRole
  name: system:persistent-volume-provisioner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: static-local-volume-provisioner-node-clusterrole-binding
  namespace: "default"
subjects:
- kind: ServiceAccount
  name: "static-local-volume-provisioner-sa"
  namespace: "default"
roleRef:
  kind: ClusterRole
  name: "static-local-volume-provisioner-node-clusterrole"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "static-local-volume-provisioner-configmap"
  namespace: "default"
data:
  storageClassMap: |
    local-raid-disks:
       volumeMode: Filesystem
       fsType: xfs
       namePattern: pv-
       hostDir: "/mnt/raid-disks/disk0/"
       mountDir: "/mnt/raid-disks/disk0/"
       blockCleanerCommand:
         - /scripts/shred.sh
         - 2
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: "local-raid-disks"
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: static-local-volume-provisioner-ds
  namespace: "default"
  labels:
    app: "static-local-volume-provisioner"
spec:
  selector:
    matchLabels:
      app: "static-local-volume-provisioner"
  template:
    metadata:
      labels:
        app: "static-local-volume-provisioner"
    spec:
      serviceAccountName: "static-local-volume-provisioner-sa"
      # NOTE: 'affinity' option will be updated in the code
      affinity: {}
      containers:
        - image: "quay.io/external_storage/local-volume-provisioner:v2.3.4"
          imagePullPolicy: IfNotPresent
          name: provisioner
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /etc/provisioner/config
              name: provisioner-config
              readOnly: true
            - mountPath: /dev
              name: provisioner-dev
            - mountPath: "/mnt/raid-disks/disk0/"
              name: "local-raid-disks"
              mountPropagation: HostToContainer
      volumes:
        - name: provisioner-config
          configMap:
            name: "static-local-volume-provisioner-configmap"
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: "local-raid-disks"
          hostPath:
            path: "/mnt/raid-disks/disk0/"
