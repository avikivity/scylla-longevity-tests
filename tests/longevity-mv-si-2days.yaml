test_duration: 2880
prepare_write_cmd: ["cassandra-stress user profile=/tmp/c-s_profile_4mv_5queries.yaml ops'(insert=15,read1=1,read2=1,read3=1,read4=1,read5=1)' cl=QUORUM n=10000000 -port jmx=6868 -mode cql3 native -rate threads=10",
                    "cassandra-stress user profile=/tmp/c-s_profile_3si_5queries.yaml ops'(insert=25,si_read1=1,si_read2=1,si_read3=1,si_read4=1,si_read5=1)' cl=QUORUM n=10000000 -port jmx=6868 -mode cql3 native -rate threads=10"
                   ]
stress_read_cmd: ["cassandra-stress user profile=/tmp/c-s_profile_4mv_5queries.yaml ops'(insert=15,read1=1,read2=1,read3=1,read4=1,read5=1)' cl=QUORUM n=10000000 -port jmx=6868 -mode cql3 native -rate threads=10",
                  "cassandra-stress user profile=/tmp/c-s_profile_2mv_2queries.yaml ops'(insert=6,mv_p_read1=1,mv_p_read2=1)' cl=QUORUM duration=60m -port jmx=6868 -mode cql3 native -rate threads=10",
                  "cassandra-stress user profile=/tmp/c-s_profile_3si_5queries.yaml ops'(insert=25,si_read1=1,si_read2=1,si_read3=1,si_read4=1,si_read5=1)' cl=QUORUM n=10000000 -port jmx=6868 -mode cql3 native -rate threads=10",
                  "cassandra-stress user profile=/tmp/c-s_profile_2si_2queries.yaml ops'(insert=10,si_p_read1=1,si_p_read2=1)' cl=QUORUM duration=60m -port jmx=6868 -mode cql3 native -rate threads=10"
                 ]
n_db_nodes: 5
n_loaders: 2
n_monitor_nodes: 1
nemesis_class_name: 'ChaosMonkey'
nemesis_interval: 30
nemesis_during_prepare: 'true'
user_prefix: 'longevity-mv-si-2d-VERSION'
failure_post_behavior: keep
space_node_threshold: 644245
ip_ssh_connections: 'private'
#When the load is too heavy for one lader when using MULTI-KEYSPACES, the load is spreaded evenly across the loaders (round_robin)
round_robin: 'false'
experimental: 'true'
# append_conf: 'enable_sstable_data_integrity_check: true'
append_scylla_args: '--blocked-reactor-notify-ms 1000'

# aws instance_provision: on_demand|spot_fleet|spot_low_price|spot_duration
instance_provision: 'on_demand'

# scylla-manager configuration
# if running on aws and use_mgmt is true, the monitor image should not contain scylla
use_mgmt: false
mgmt_port: 10090
scylla_repo_m: 'http://repositories.scylladb.com/scylla/repo/f4a2920f80c4bf178217c2553ad65ad7/centos/scylladb-2017.1.repo'
scylla_mgmt_repo: 'http://downloads.scylladb.com.s3.amazonaws.com/manager/rpm/unstable/centos/branch-1.0/latest/scylla-manager.repo'

backends: !mux
    gce: !mux
        cluster_backend: 'gce'
        user_credentials_path: '~/.ssh/scylla-test'
        gce_network: 'qa-vpc'
        gce_image: 'https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/family/centos-7'
        gce_image_username: 'scylla-test'
        gce_instance_type_db: 'n1-highmem-16'
        gce_root_disk_type_db: 'pd-ssd'
        gce_root_disk_size_db: 50
        gce_n_local_ssd_disk_db: 8
        gce_instance_type_loader: 'n1-standard-4'
        gce_root_disk_type_loader: 'pd-standard'
        gce_n_local_ssd_disk_loader: 0
        gce_instance_type_monitor: 'n1-standard-2'
        gce_root_disk_type_monitor: 'pd-standard'
        gce_root_disk_size_monitor: 50
        gce_n_local_ssd_disk_monitor: 0
        scylla_repo: 'REPO_FILE_PATH'
        us_east_1:
          gce_datacenter: 'us-east1-b'
    aws: !mux
        cluster_backend: 'aws'
        user_credentials_path: '~/.ssh/scylla-qa-ec2'
        instance_type_loader: 'c4.large'
        instance_type_monitor: 't2.small'
        instance_type_db: 'i3.4xlarge'
        us_east_1:
            region_name: 'us-east-1'
            security_group_ids: 'sg-c5e1f7a0'
            subnet_id: 'subnet-ec4a72c4'
            ami_id_db_scylla: 'AMI-ID'
            ami_id_loader: 'AMI-ID'
            ami_id_monitor: 'AMI-ID'
            ami_db_scylla_user: 'centos'
            ami_loader_user: 'centos'
            ami_monitor_user: 'centos'

databases: !mux
    cassandra:
        db_type: cassandra
    scylla:
        db_type: scylla

