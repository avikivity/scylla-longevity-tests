# default cassandra stress duration (min) if none specified
cassandra_stress_duration: 240
# cassandra-stress command. You can specify everything but the -node parameter,
# which is going to be provided by the test suite infrastructure
stress_cmd: cassandra-stress write cl=QUORUM duration=240m -schema 'replication(factor=3)' -port jmx=6868 -mode cql3 native -rate threads=200 throttle=5000/s -col 'size=FIXED(1) n=FIXED(10240)' -pop seq=1..100000000
n_db_nodes: 3
# If you want to use more than 1 loader node, I recommend
# increasing the size of the DB instance (instance_type_db parameter),
# since 't2.micro' nodes tend to struggle with a lot of load.
n_loaders: 4
# Number of monitor nodes running prometheus
n_monitor_nodes: 1
# Nemesis class to use (possible types in sdcm.nemesis). Example: StopStartMonkey
nemesis_class_name: 'CorruptThenRepairMonkey'
# Nemesis sleep interval to use if None provided specifically
nemesis_interval: 30
# Prefix for your AWS VMs (handy for telling instances from different
# users apart). If you leave this empty, the prefix will be your unix username.
user_prefix: 'cases-repair-100gb-VERSION'
# Failure/post test behavior
# Default: Destroy AWS instances and credentials (destroy)
# Keep AWS instances running and leave credentials alone (keep)
# Stop AWS instances and leave credentials alone (stop)
failure_post_behavior: destroy
# Space node threshold before starting nemesis (bytes)
space_node_threshold: 107374182400

# The new db binary will be uploaded to db instance to replace the one
# provided by the ami. This is useful to test out a new scylla version
# without making a new ami.
# update_db_binary: $path_of_the_new_scylla_binary
update_db_binary: ''

backends: !mux
    gce: !mux
        cluster_backend: 'gce'
        user_credentials_path: '~/.ssh/scylla-test'
        gce_network: 'qa-vpc'
        gce_image: 'https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/family/centos-7'
        gce_image_username: 'scylla-test'
        gce_instance_type_db: 'n1-highmem-16'
        gce_root_disk_type_db: 'pd-ssd'
        gce_root_disk_size_db: 50
        gce_n_local_ssd_disk_db: 8
        gce_instance_type_loader: 'n1-standard-4'
        gce_root_disk_type_loader: 'pd-standard'
        gce_n_local_ssd_disk_loader: 0
        gce_instance_type_monitor: 'n1-standard-2'
        gce_root_disk_type_monitor: 'pd-standard'
        gce_root_disk_size_monitor: 50
        gce_n_local_ssd_disk_monitor: 0
        scylla_repo: 'SCYLLA_REPO_FILE_URL'
        us_east_1:
          gce_datacenter: 'us-east1-b'

    aws: !mux
        cluster_backend: 'aws'
        instance_type_loader: 'c5.large'
        instance_type_monitor: 't3.small'
        instance_type_db: 'i3.2xlarge'
        us_east_1:
            region_name: 'us-east-1'
            security_group_ids: 'sg-c5e1f7a0'
            subnet_id: 'subnet-d934e980'
            ami_id_db_scylla: 'AMI_ID'
            ami_id_loader: 'ami-0803fc42f8277925f' # Loader dedicated AMI
            ami_id_monitor: 'ami-02eac2c0129f6376b' # Official CentOS Linux 7 x86_64 HVM EBS ENA 1901_01
            ami_db_scylla_user: 'centos'
            ami_loader_user: 'centos'
            ami_monitor_user: 'centos'
        eu_west_1:
            region_name: 'eu-west-1'
            security_group_ids: 'sg-059a7f66a947d4b5c'
            subnet_id: 'subnet-088fddaf520e4c7a8'
            ami_id_db_scylla: 'AMI_ID'
            ami_id_loader: 'ami-0668349068972415c' # Loader dedicated AMI
            ami_id_monitor: 'ami-0ff760d16d9497662' # Official CentOS Linux 7 x86_64 HVM EBS ENA 1901_01
            ami_db_scylla_user: 'centos'
            ami_loader_user: 'centos'
            ami_monitor_user: 'centos'
            aws_root_disk_size_monitor: 20  # GB

databases: !mux
    cassandra:
        db_type: cassandra
    scylla:
        db_type: scylla
